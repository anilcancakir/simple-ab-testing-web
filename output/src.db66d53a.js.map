{"version":3,"sources":["src/ab-testing-storage.js","src/analytics-api.js","src/index.js"],"names":["AbTestingStorage","_classCallCheck","_createClass","key","value","CookieAbTestingStorage","_AbTestingStorage","_inherits","_super","_createSuper","apply","arguments","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","d","Date","setTime","getTime","expires","toUTCString","LocalStorageAbTestingStorage","_AbTestingStorage2","_super2","localStorage","getItem","setItem","window","disk","find","isAvailable","_default","exports","default","trackPageview","params","console","log","concat","trackEvent","require","_abTestingStorage","_interopRequireDefault","_analyticsApi","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","Array","from","test","iter","isArray","len","arr2","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","protoProps","staticProps","_defineProperty","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","AbTesting","variants","selectedVariant","initVariants","initSelectedVariant","showSelectedVariant","showOrHideTrackingDialog","_this","querySelectorAll","map","el","getAttribute","forEach","weight","parseInt","index","findIndex","v","push","selectedVariantKey","DISK_KEY_SELECTED_VARIANT_KEY","weights","reduce","acc","variant","_acc","random","Math","at","style","display","DISK_KEY_TRACKING_CONTROL","_this2","DISK_KEY_TRACKING_CONTROL_DIALOG","startListenEventsToTrack","querySelector","addEventListener","setTrackingDialogChoice","_this3","canTrack","JSON","stringify","date","type"],"mappings":"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","file":"src.db66d53a.js","sourceRoot":"..","sourcesContent":["class AbTestingStorage {\n    /**\n     * Get item value from storage.\n     *\n     * @param key\n     * @returns {string|null}\n     */\n    getItem(key) {\n        return null;\n    }\n\n    /**\n     * Set item value to storage.\n     *\n     * @param key\n     * @param value\n     */\n    setItem(key, value) {\n        //\n    }\n\n    /**\n     * Check storage method is available for current browser.\n     *\n     * @returns {boolean}\n     */\n    isAvailable() {\n        return true;\n    }\n}\n\nclass CookieAbTestingStorage extends AbTestingStorage {\n    /**\n     * Get cookie value\n     *\n     * @code https://www.w3schools.com/js/js_cookies.asp\n     * @param key\n     * @returns {string}\n     */\n    getItem(key) {\n        let name = key + \"=\";\n        let decodedCookie = decodeURIComponent(document.cookie);\n        let ca = decodedCookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n\n        return \"\";\n    }\n\n    /**\n     * Set cookie value\n     *\n     * @code https://www.w3schools.com/js/js_cookies.asp\n     * @param key\n     * @param value\n     */\n    setItem(key, value) {\n        const d = new Date();\n        d.setTime(d.getTime() + (356 * 24 * 60 * 60 * 1000));\n        let expires = \"expires=\" + d.toUTCString();\n        document.cookie = key + \"=\" + value + \";\" + expires + \";path=/\";\n    }\n\n    /**\n     * Check the cookie storage is available.\n     *\n     * @returns {boolean}\n     */\n    isAvailable() {\n        return typeof document !== 'undefined' && 'cookie' in document && document['cookie'] !== null;\n    }\n}\n\nclass LocalStorageAbTestingStorage extends AbTestingStorage {\n    /**\n     * Get local storage value\n     *\n     * @param key\n     * @returns {string}\n     */\n    getItem(key) {\n        return localStorage.getItem(key);\n    }\n\n    /**\n     * Set local storage value\n     *\n     * @param key\n     * @param value\n     */\n    setItem(key, value) {\n        localStorage.setItem(key, value);\n    }\n\n    /**\n     * Check the local storage is available.\n     *\n     * @returns {boolean}\n     */\n    isAvailable() {\n        return typeof window !== 'undefined' && 'localStorage' in window && window['localStorage'] !== null;\n    }\n}\n\n// Decide the available storage for the browser\nconst disk = [\n    new LocalStorageAbTestingStorage(),\n    new CookieAbTestingStorage(),\n    new AbTestingStorage()\n].find(disk => disk.isAvailable());\n\nexport default disk;\n\n","/**\n * Tracks a pageview to our \"imaginary api\" - in this demo just the browser console. ;)\n * Send as params whatever you might seem valuable to send.\n * The URL is probably a good start though.\n */\nexport const trackPageview = (params) => {\n    console.log(`--> Tracking Pageview: ${params}`);\n};\n\n/**\n * Tracks an event to our \"imaginary api\" - in this demo just the browser console. ;)\n * Send as params whatever you might seem valuable to send.\n * The URL and an event name are probably a good start though.\n */\nexport const trackEvent = (params) => {\n    console.log(`--> Tracking Event: ${params}`);\n};\n","import \"./styles.css\";\nimport disk from './ab-testing-storage';\nimport {trackPageview, trackEvent} from \"./analytics-api.js\";\n\nclass AbTesting {\n    DISK_KEY_TRACKING_CONTROL_DIALOG = 'abTestingCanTrackDialog';\n    DISK_KEY_TRACKING_CONTROL = 'abTestingCanTrack';\n    DISK_KEY_SELECTED_VARIANT_KEY = 'abTestingSelectedVariantKey';\n\n    /**\n     * AbTesting.\n     */\n    constructor() {\n        this.disk = disk;\n        this.variants = [];\n        this.selectedVariant = null;\n\n        this.initVariants();\n        this.initSelectedVariant();\n        this.showSelectedVariant();\n        this.showOrHideTrackingDialog();\n    }\n\n    /**\n     * Init variants from document by using custom attribute.\n     */\n    initVariants() {\n        [...document.querySelectorAll('[data-ab-variant]')].map(el => {\n            el.getAttribute('data-ab-variant').split(',').forEach(key => {\n                let weight = parseInt(el.getAttribute('data-ab-weight')) || 1;\n                let index = this.variants.findIndex(v => v.key === key);\n\n                if (index > -1) {\n                    this.variants[index].weight = this.variants[index].weight > weight ? this.variants[index].weight : weight;\n                } else {\n                    this.variants.push({key, weight});\n                }\n            });\n        });\n    }\n\n    /**\n     * Init selected variant for current user.\n     */\n    initSelectedVariant() {\n        // Try to get user selected variant key\n        let selectedVariantKey = this.disk.getItem(this.DISK_KEY_SELECTED_VARIANT_KEY);\n\n        console.log('selectedVariantKey', selectedVariantKey);\n\n        if (selectedVariantKey) {\n            // If it has selected variant before, use this.\n            this.selectedVariant = this.variants.find(v => v.key === selectedVariantKey);\n        } else {\n            // If it has not any selected variant, let's play!\n\n            // Parse weights from parsed variants\n            const weights = this.variants.reduce((acc, variant, i) => {\n                acc.push(variant.weight + (acc[i - 1] ?? 0));\n                return acc;\n            }, []);\n\n            // Get random variant by using weights\n            const random = Math.random() * weights.at(-1);\n\n            // Select user variant\n            this.selectedVariant = this.variants[weights.findIndex((weight) => weight > random)];\n\n            // Store selected variant key for next visits\n            this.disk.setItem(this.DISK_KEY_SELECTED_VARIANT_KEY, this.selectedVariant.key);\n        }\n    }\n\n    /**\n     * Make visible selected variant elements in the document.\n     */\n    showSelectedVariant() {\n        document.querySelectorAll(`[data-ab-variant=${this.selectedVariant.key}]`).forEach(el => {\n            el.style.display = 'block';\n        });\n    }\n\n    /**\n     * Can track user events.\n     *\n     * @returns {boolean}\n     */\n    canTrack() {\n        return !!this.disk.getItem(this.DISK_KEY_TRACKING_CONTROL);\n    }\n\n    /**\n     * Show or hide tracking dialog.\n     */\n    showOrHideTrackingDialog() {\n        // Do not anything if user selected choice before.\n        if (this.disk.getItem(this.DISK_KEY_TRACKING_CONTROL_DIALOG)) {\n            return this.startListenEventsToTrack();\n        }\n\n        document.querySelector('[data-ab-tracking-dialog]').style.display = 'block';\n        document.querySelector('[data-ab-tracking-dialog-button-yes]')\n            .addEventListener('click', () => this.setTrackingDialogChoice(1));\n\n        document.querySelector('[data-ab-tracking-dialog-button-no]')\n            .addEventListener('click', () => this.setTrackingDialogChoice(0));\n    }\n\n    /**\n     * Set user choice for tracking dialog.\n     *\n     * @param value\n     */\n    setTrackingDialogChoice(value) {\n        disk.setItem(this.DISK_KEY_TRACKING_CONTROL, value);\n        disk.setItem(this.DISK_KEY_TRACKING_CONTROL_DIALOG, new Date);\n        document.querySelector('[data-ab-tracking-dialog]').style.display = 'none';\n        this.startListenEventsToTrack();\n    }\n\n    /**\n     * Start listen events for tracking.\n     */\n    startListenEventsToTrack() {\n        if (!this.canTrack()) {\n            return;\n        }\n\n        // Send page view event first\n        trackPageview(JSON.stringify({variant: this.selectedVariant.key, date: new Date}));\n\n        // Listen click events for links in document\n        document.querySelectorAll('a').forEach(el => {\n            el.addEventListener('click', () => {\n                trackEvent(JSON.stringify({type: 'click', variant: this.selectedVariant.key, date: new Date, el}));\n            });\n        });\n    }\n}\n\nexport default new AbTesting;\n"]}